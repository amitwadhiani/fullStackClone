{"version":3,"sources":["webpack:///src/app/editor/editable-article-resolver.service.ts","webpack:///src/app/editor/editor-routing.module.ts","webpack:///src/app/editor/editor.component.html","webpack:///src/app/editor/editor.component.ts","webpack:///src/app/editor/editor.module.ts"],"names":["EditableArticleResolver","articlesService","router","userService","route","state","get","params","pipe","map","article","getCurrentUser","username","author","navigateByUrl","catchError","err","routes","path","component","EditorComponent","canActivate","AuthGuard","resolve","EditorRoutingModule","RouterModule","fb","cd","tagField","FormControl","errors","isSubmitting","articleForm","group","title","description","body","tagList","data","subscribe","patchValue","markForCheck","index","item","tag","value","indexOf","push","reset","tagName","filter","updateArticle","save","slug","values","Object","assign","addTag","submitForm","EditorModule","SharedModule"],"mappings":"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","file":"src_app_editor_editor_module_ts-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Article, ArticlesService, UserService } from '../core';\r\nimport { catchError ,  map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EditableArticleResolver implements Resolve<Article> {\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n\r\n    return this.articlesService.get(route.params['slug'])\r\n      .pipe(\r\n        map(\r\n          article => {\r\n            if (this.userService.getCurrentUser().username === article.author.username) {\r\n              return article;\r\n            } else {\r\n              this.router.navigateByUrl('/');\r\n            }\r\n          }\r\n        ),\r\n        catchError((err) => this.router.navigateByUrl('/'))\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditorComponent } from './editor.component';\r\nimport { EditableArticleResolver } from './editable-article-resolver.service';\r\nimport { AuthGuard } from '../core';\r\nimport { SharedModule } from '../shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: ':slug',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      article: EditableArticleResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EditorRoutingModule {}\r\n","<div class=\"editor-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n\r\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\r\n\r\n        <form [formGroup]=\"articleForm\">\r\n          <fieldset [disabled]=\"isSubmitting\">\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control form-control-lg\"\r\n                formControlName=\"title\"\r\n                type=\"text\"\r\n                placeholder=\"Article Title\" />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control\"\r\n                formControlName=\"description\"\r\n                type=\"text\"\r\n                placeholder=\"What's this article about?\" />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <textarea class=\"form-control\"\r\n                formControlName=\"body\"\r\n                rows=\"8\"\r\n                placeholder=\"Write your article (in markdown)\">\r\n              </textarea>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Enter tags\"\r\n                [formControl]=\"tagField\"\r\n                (keyup.enter)=\"addTag()\" />\r\n\r\n              <div class=\"tag-list\">\r\n                <span *ngFor=\"let tag of article.tagList; trackBy: trackByFn\"\r\n                  class=\"tag-default tag-pill\">\r\n                  <i class=\"ion-close-round\" (click)=\"removeTag(tag)\"></i>\r\n                  {{ tag }}\r\n                </span>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <button class=\"btn btn-lg pull-xs-right btn-primary\" type=\"button\" (click)=\"submitForm()\">\r\n              Publish Article\r\n            </button>\r\n\r\n          </fieldset>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Article, ArticlesService } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-editor-page',\r\n  templateUrl: './editor.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditorComponent implements OnInit {\r\n  article: Article = {} as Article;\r\n  articleForm: FormGroup;\r\n  tagField = new FormControl();\r\n  errors: Object = {};\r\n  isSubmitting = false;\r\n\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    // use the FormBuilder to create a form group\r\n    this.articleForm = this.fb.group({\r\n      title: '',\r\n      description: '',\r\n      body: ''\r\n    });\r\n\r\n    // Initialized tagList as empty array\r\n    this.article.tagList = [];\r\n\r\n    // Optional: subscribe to value changes on the form\r\n    // this.articleForm.valueChanges.subscribe(value => this.updateArticle(value));\r\n  }\r\n\r\n  ngOnInit() {\r\n    // If there's an article prefetched, load it\r\n    this.route.data.subscribe((data: { article: Article }) => {\r\n      if (data.article) {\r\n        this.article = data.article;\r\n        this.articleForm.patchValue(data.article);\r\n        this.cd.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return index;\r\n  }\r\n\r\n  addTag() {\r\n    // retrieve tag control\r\n    const tag = this.tagField.value;\r\n    // only add tag if it does not exist yet\r\n    if (this.article.tagList.indexOf(tag) < 0) {\r\n      this.article.tagList.push(tag);\r\n    }\r\n    // clear the input\r\n    this.tagField.reset('');\r\n  }\r\n\r\n  removeTag(tagName: string) {\r\n    this.article.tagList = this.article.tagList.filter(tag => tag !== tagName);\r\n  }\r\n\r\n  submitForm() {\r\n    this.isSubmitting = true;\r\n\r\n    // update the model\r\n    this.updateArticle(this.articleForm.value);\r\n\r\n    // post the changes\r\n    this.articlesService.save(this.article).subscribe(\r\n      article => {\r\n        this.router.navigateByUrl('/article/' + article.slug);\r\n        this.cd.markForCheck();\r\n      },\r\n      err => {\r\n        this.errors = err;\r\n        this.isSubmitting = false;\r\n        this.cd.markForCheck();\r\n      }\r\n    );\r\n  }\r\n\r\n  updateArticle(values: Object) {\r\n    Object.assign(this.article, values);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\n\r\nimport { EditorComponent } from './editor.component';\r\n\r\nimport { SharedModule } from '../shared';\r\nimport { EditorRoutingModule } from './editor-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, EditorRoutingModule],\r\n  declarations: [EditorComponent],\r\n  providers: []\r\n})\r\nexport class EditorModule {}\r\n"]}