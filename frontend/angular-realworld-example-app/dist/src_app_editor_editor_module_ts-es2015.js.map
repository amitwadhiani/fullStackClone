{"version":3,"sources":["./src/app/editor/editable-article-resolver.service.ts","./src/app/editor/editor-routing.module.ts","./src/app/editor/editor.component.ts","./src/app/editor/editor.component.html","./src/app/editor/editor.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAKmD;;;;AAK5C,MAAM,uBAAuB;IAClC,YACU,eAAgC,EAChC,MAAc,EACd,WAAwB;QAFxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,OAAO,CACL,KAA6B,EAC7B,KAA0B;QAG1B,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAClD,IAAI,CACH,mDAAG,CACD,OAAO,CAAC,EAAE;YACR,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,KAAK,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAC1E,OAAO,OAAO,CAAC;aAChB;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAChC;QACH,CAAC,CACF,EACD,0DAAU,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CACpD,CAAC;IACN,CAAC;;8FAzBU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;;;;ACPmC;AACF;AACyB;AAC1C;;;AAGpC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAe;QAC1B,WAAW,EAAE,CAAC,4CAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,8DAAe;QAC1B,WAAW,EAAE,CAAC,4CAAS,CAAC;QACxB,OAAO,EAAE;YACP,OAAO,EAAE,uFAAuB;SACjC;KACF;CACF,CAAC;AAMK,MAAM,mBAAmB;;sFAAnB,mBAAmB;gHAAnB,mBAAmB;oHAHrB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,mBAAmB,oFAFpB,yDAAY;;;;;;;;;;;;;;;;;;;;;;ACxB6C;;;;;;;;;ICuCrD,2EAC+B;IAC7B,wEAAoD;IAAzB,gXAAwB;IAAC,4DAAI;IACxD,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,kFACF;;ADjCT,MAAM,eAAe;IAO1B,YACU,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,EAAe,EACf,EAAqB;QAJrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,OAAE,GAAF,EAAE,CAAmB;QAX/B,YAAO,GAAY,EAAa,CAAC;QAEjC,aAAQ,GAAG,IAAI,uDAAW,EAAE,CAAC;QAC7B,WAAM,GAAW,EAAE,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;QASnB,6CAA6C;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;QAEH,qCAAqC;QACrC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC;QAE1B,mDAAmD;QACnD,+EAA+E;IACjF,CAAC;IAED,QAAQ;QACN,4CAA4C;QAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAA0B,EAAE,EAAE;YACvD,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1C,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,KAAK,EAAE,IAAI;QACnB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM;QACJ,uBAAuB;QACvB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAChC,wCAAwC;QACxC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACzC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC;QACD,kBAAkB;QAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,OAAe;QACvB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;IAC7E,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,mBAAmB;QACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE3C,mBAAmB;QACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC/C,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QACzB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,MAAc;QAC1B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC;;8EAhFU,eAAe;6GAAf,eAAe;QCX5B,yEAAyB;QACvB,yEAA4B;QAC1B,yEAAiB;QACf,yEAA6C;QAE3C,gFAAqD;QAErD,0EAAgC;QAC9B,8EAAoC;QAElC,8EAA6B;QAC3B,sEAGgC;QAClC,4DAAW;QAEX,8EAA6B;QAC3B,uEAG6C;QAC/C,4DAAW;QAEX,+EAA6B;QAC3B,gFAGiD;QACjD;QAAA,4DAAW;QACb,4DAAW;QAEX,+EAA6B;QAC3B,6EAI6B;QAA3B,mJAAe,YAAQ,IAAC;QAJ1B,4DAI6B;QAE7B,2EAAsB;QACpB,gHAIO;QACT,4DAAM;QACR,4DAAW;QAEX,8EAA0F;QAAvB,wIAAS,gBAAY,IAAC;QACvF,6EACF;QAAA,4DAAS;QAEX,4DAAW;QACb,4DAAO;QAET,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QArDmB,0DAAiB;QAAjB,8EAAiB;QAE5B,0DAAyB;QAAzB,sFAAyB;QACnB,0DAAyB;QAAzB,sFAAyB;QA4B7B,0DAAwB;QAAxB,qFAAwB;QAIF,0DAAoB;QAApB,wFAAoB;;;;;;;;;;;;;;;;;;;;;ACrCL;AAEZ;AACqB;;AAOvD,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;8GAFZ,EAAE,YAFJ,CAAC,iDAAY,EAAE,uEAAmB,CAAC;mIAIjC,YAAY,mBAHR,8DAAe,aADpB,iDAAY,EAAE,uEAAmB","file":"src_app_editor_editor_module_ts-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Article, ArticlesService, UserService } from '../core';\r\nimport { catchError ,  map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EditableArticleResolver implements Resolve<Article> {\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n\r\n    return this.articlesService.get(route.params['slug'])\r\n      .pipe(\r\n        map(\r\n          article => {\r\n            if (this.userService.getCurrentUser().username === article.author.username) {\r\n              return article;\r\n            } else {\r\n              this.router.navigateByUrl('/');\r\n            }\r\n          }\r\n        ),\r\n        catchError((err) => this.router.navigateByUrl('/'))\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditorComponent } from './editor.component';\r\nimport { EditableArticleResolver } from './editable-article-resolver.service';\r\nimport { AuthGuard } from '../core';\r\nimport { SharedModule } from '../shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: ':slug',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      article: EditableArticleResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EditorRoutingModule {}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Article, ArticlesService } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-editor-page',\r\n  templateUrl: './editor.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditorComponent implements OnInit {\r\n  article: Article = {} as Article;\r\n  articleForm: FormGroup;\r\n  tagField = new FormControl();\r\n  errors: Object = {};\r\n  isSubmitting = false;\r\n\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    // use the FormBuilder to create a form group\r\n    this.articleForm = this.fb.group({\r\n      title: '',\r\n      description: '',\r\n      body: ''\r\n    });\r\n\r\n    // Initialized tagList as empty array\r\n    this.article.tagList = [];\r\n\r\n    // Optional: subscribe to value changes on the form\r\n    // this.articleForm.valueChanges.subscribe(value => this.updateArticle(value));\r\n  }\r\n\r\n  ngOnInit() {\r\n    // If there's an article prefetched, load it\r\n    this.route.data.subscribe((data: { article: Article }) => {\r\n      if (data.article) {\r\n        this.article = data.article;\r\n        this.articleForm.patchValue(data.article);\r\n        this.cd.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return index;\r\n  }\r\n\r\n  addTag() {\r\n    // retrieve tag control\r\n    const tag = this.tagField.value;\r\n    // only add tag if it does not exist yet\r\n    if (this.article.tagList.indexOf(tag) < 0) {\r\n      this.article.tagList.push(tag);\r\n    }\r\n    // clear the input\r\n    this.tagField.reset('');\r\n  }\r\n\r\n  removeTag(tagName: string) {\r\n    this.article.tagList = this.article.tagList.filter(tag => tag !== tagName);\r\n  }\r\n\r\n  submitForm() {\r\n    this.isSubmitting = true;\r\n\r\n    // update the model\r\n    this.updateArticle(this.articleForm.value);\r\n\r\n    // post the changes\r\n    this.articlesService.save(this.article).subscribe(\r\n      article => {\r\n        this.router.navigateByUrl('/article/' + article.slug);\r\n        this.cd.markForCheck();\r\n      },\r\n      err => {\r\n        this.errors = err;\r\n        this.isSubmitting = false;\r\n        this.cd.markForCheck();\r\n      }\r\n    );\r\n  }\r\n\r\n  updateArticle(values: Object) {\r\n    Object.assign(this.article, values);\r\n  }\r\n}\r\n","<div class=\"editor-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n\r\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\r\n\r\n        <form [formGroup]=\"articleForm\">\r\n          <fieldset [disabled]=\"isSubmitting\">\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control form-control-lg\"\r\n                formControlName=\"title\"\r\n                type=\"text\"\r\n                placeholder=\"Article Title\" />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control\"\r\n                formControlName=\"description\"\r\n                type=\"text\"\r\n                placeholder=\"What's this article about?\" />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <textarea class=\"form-control\"\r\n                formControlName=\"body\"\r\n                rows=\"8\"\r\n                placeholder=\"Write your article (in markdown)\">\r\n              </textarea>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Enter tags\"\r\n                [formControl]=\"tagField\"\r\n                (keyup.enter)=\"addTag()\" />\r\n\r\n              <div class=\"tag-list\">\r\n                <span *ngFor=\"let tag of article.tagList; trackBy: trackByFn\"\r\n                  class=\"tag-default tag-pill\">\r\n                  <i class=\"ion-close-round\" (click)=\"removeTag(tag)\"></i>\r\n                  {{ tag }}\r\n                </span>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <button class=\"btn btn-lg pull-xs-right btn-primary\" type=\"button\" (click)=\"submitForm()\">\r\n              Publish Article\r\n            </button>\r\n\r\n          </fieldset>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\n\r\n\r\nimport { EditorComponent } from './editor.component';\r\n\r\nimport { SharedModule } from '../shared';\r\nimport { EditorRoutingModule } from './editor-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, EditorRoutingModule],\r\n  declarations: [EditorComponent],\r\n  providers: []\r\n})\r\nexport class EditorModule {}\r\n"],"sourceRoot":"webpack:///"}